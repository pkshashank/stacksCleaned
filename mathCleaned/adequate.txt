DEFNN	  Let MATH be a ring. A module-valued functor is a functor MATH such that <CASES> CASE: for every object MATH of MATH the group MATH is endowed with the structure of a MATH-module, and CASE: for any morphism MATH of MATH the map MATH is MATH-linear. </CASES> A morphism of module-valued functors is a transformation of functors MATH such that MATH is MATH-linear for all MATH.  
DEFNN	  Let MATH be a ring. A module-valued functor MATH on MATH is called <CASES> CASE: adequate if there exists a map of MATH-modules MATH such that MATH is isomorphic to MATH. CASE: linearly adequate if MATH is isomorphic to the kernel of a map MATH. </CASES>  
LEMMA	  Let MATH be a ring. Let MATH be an adequate functor on MATH. If MATH is a filtered colimit of MATH-algebras, then MATH.  
LEMMA	  Let MATH be a ring. Let MATH be an adequate functor on MATH. If MATH is flat, then MATH is an isomorphism.  
LEMMA	  Let MATH be a ring. Let MATH be an adequate functor on MATH. Then there exists a surjection MATH with MATH a direct sum of linearly adequate functors.  
LEMMA	  Let MATH be a ring. Let MATH be a module-valued functor on MATH. Assume that for MATH flat the map MATH is an isomorphism. Let MATH be a graded MATH-algebra. Then <CASES> CASE: MATH, and CASE: the map MATH induces map MATH whose image is contained in MATH. </CASES>  
LEMMA	  Let MATH be a ring. Given a solid diagram MATH of module-valued functors on MATH with exact row there exists a dotted arrow making the diagram commute.  
LEMMA	  Let MATH be a ring. Let MATH be a map of module-valued functors on MATH with MATH adequate. Then MATH is adequate.  
LEMMA	  [ The cokernel of a map of adequate functors on the category of algebras over a ring is adequate. ] Let MATH be a ring. Let MATH be a map of adequate functors on MATH. Then MATH is adequate.  
LEMMA	  Let MATH be a ring. Let MATH be a map of adequate functors on MATH. Then MATH is adequate.  
LEMMA	  Let MATH be a ring. An arbitrary direct sum of adequate functors on MATH is adequate. A colimit of adequate functors is adequate.  
LEMMA	  Let MATH be a ring. Let MATH be module-valued functors on MATH. Let MATH be a transformation of functors. Assume <CASES> CASE: MATH is additive, CASE: for every MATH-algebra MATH and MATH and unit MATH we have MATH in MATH, and CASE: for any flat ring map MATH we have MATH. </CASES> Then MATH is a morphism of module-valued functors.  
LEMMA	  Let MATH be a ring. Let MATH be a short exact sequence of module-valued functors on MATH with MATH linearly adequate. Then MATH is adequate.  
LEMMA	  Let MATH be a ring. Let MATH be a short exact sequence of module-valued functors on MATH. If MATH and MATH are adequate, so is MATH.  
LEMMA	  Let MATH be a ring map. If MATH is an adequate functor on MATH, then its restriction MATH to MATH is adequate too.  
LEMMA	  Let MATH be a ring map. If MATH is an adequate functor on MATH, then the module-valued functor MATH on MATH is adequate too.  
LEMMA	  Let MATH be a product of rings. An adequate functor over MATH is the same thing as a sequence MATH of adequate functors MATH over MATH.  
LEMMA	  Let MATH be a ring map and let MATH be a module-valued functor on MATH such that <CASES> CASE: the restriction MATH of MATH to the category of MATH-algebras is adequate, and CASE: for any MATH-algebra MATH the sequence MATH is exact. </CASES> Then MATH is adequate.  
LEMMA	  Let MATH be a ring. For every module-valued functor MATH on MATH there exists a morphism MATH of module-valued functors on MATH such that (1) MATH is adequate and (2) for every adequate functor MATH the map MATH is a bijection.  
LEMMA	  Let MATH be a ring. Denote MATH the category of module-valued functors on MATH and MATH the category of adequate functors on MATH. Denote MATH the inclusion functor. Denote MATH the construction of Lemma REF. Then <CASES> CASE: MATH is fully faithful, exact, and its image is a weak Serre subcategory, CASE: MATH has enough injectives, CASE: the functor MATH is a right adjoint to MATH hence left exact, CASE: MATH transforms injectives into injectives, CASE: MATH has enough injectives. </CASES>  
LEMMA	  Let MATH be a ring. Let MATH be a module valued functor. For every MATH and MATH-module MATH there is a canonical decomposition MATH characterized by the following properties <CASES> CASE: MATH, CASE: there is a MATH-module structure MATH compatible with MATH-module structure on MATH, CASE: MATH is a functor from the category of pairs MATH, CASE:  there are canonical maps MATH inducing a transformation between functors defined on the category of pairs MATH, CASE: MATH and the map MATH is zero when MATH is the zero map. </CASES>  
LEMMA	  Let MATH be a ring. Let MATH be an injective object of the category of module-valued functors. Then for any MATH and short exact sequence MATH of MATH-modules the sequence MATH is exact.  
LEMMA	  Let MATH be a ring. Let MATH be a module-valued functor such that for any MATH the functor MATH on MATH-modules transforms a short exact sequence of MATH-modules into a right exact sequence. Then <CASES> CASE: MATH, CASE: there is a second functorial MATH-module structure on MATH defined by setting MATH for MATH and MATH, CASE:  the canonical map MATH of Lemma REF is MATH-linear also with respect to the second MATH-module structure, CASE:  given a finitely presented MATH-module MATH there is a canonical isomorphism MATH where the tensor product uses the second MATH-module structure on MATH. </CASES>  
LEMMA	  Let MATH be a ring. For MATH a module-valued functor on MATH say MATH holds if for all MATH the functor MATH on MATH-modules transforms a short exact sequence of MATH-modules into a right exact sequence. Let MATH be a short exact sequence of module-valued functors on MATH. <CASES> CASE: If MATH holds for MATH then MATH holds for MATH. CASE: If MATH holds for MATH then MATH holds for MATH. CASE: If MATH is morphism of module-valued functors on MATH and MATH holds for MATH, MATH, MATH, and MATH, then MATH holds for MATH. </CASES>  
LEMMA	  Let MATH be a ring. Let MATH, MATH be MATH-modules with MATH of finite presentation. Then MATH for MATH where MATH is the category of module-valued functors on MATH.  
LEMMA	  Let MATH be a ring. Let MATH be an MATH-module. Let MATH be a linearly adequate functor on MATH. Then MATH for MATH where MATH is the category of module-valued functors on MATH.  
LEMMA	  With notation as in Lemma REF we have MATH for all MATH and any adequate functor MATH.  
DEFNN	  A sheaf of MATH-modules MATH on MATH is adequate if there exists a MATH-covering MATH such that MATH is adequate for all MATH.  
LEMMA	  Let MATH be a scheme. Let MATH be an adequate MATH-module on MATH. For any affine scheme MATH over MATH the functor MATH is adequate.  
LEMMA	  Let MATH be an affine scheme. The category of adequate MATH-modules on MATH is equivalent to the category of adequate module-valued functors on MATH.  
LEMMA	  Let MATH be a morphism of schemes. The pullback MATH of an adequate MATH-module MATH on MATH is an adequate MATH-module on MATH.  
LEMMA	  Let MATH be a scheme. Let MATH be an MATH-module on MATH. The following are equivalent <CASES> CASE: MATH is adequate, CASE: there exists an affine open covering MATH and maps of quasi-coherent MATH-modules MATH such that MATH is the kernel of MATH CASE: there exists a MATH-covering MATH and maps of MATH-quasi-coherent modules MATH such that MATH is the kernel of MATH, CASE: there exists a MATH-covering MATH such that each MATH is adequate, CASE: for any affine scheme MATH over MATH the restriction MATH is the kernel of a map MATH of quasi-coherent MATH-modules. </CASES>  
LEMMA	  Let MATH be an adequate MATH-module on MATH. For any surjective flat morphism MATH of affines over MATH the extended Cech complex MATH is exact. In particular MATH satisfies the sheaf condition for fpqc coverings, and is a sheaf of MATH-modules on MATH.  
DEFNN	  Let MATH be a scheme. The category of adequate MATH-modules on MATH is denoted MATH or MATH. If we want to think just about the abelian category of adequate modules without choosing a topology we simply write MATH.  
LEMMA	  Let MATH be a scheme. Let MATH be an adequate MATH-module on MATH. <CASES> CASE: The restriction MATH is a quasi-coherent MATH-module on the scheme MATH. CASE: The restriction MATH is the quasi-coherent module associated to MATH. CASE: For any affine scheme MATH over MATH we have MATH for all MATH. CASE: There is a canonical isomorphism MATH </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a presheaf of MATH-modules on MATH. If for every affine scheme MATH over MATH the functor MATH is adequate, then the sheafification of MATH is an adequate MATH-module.  
LEMMA	  Let MATH be a scheme. <CASES> CASE: The category MATH is abelian. CASE: The functor MATH is exact. CASE: If MATH is a short exact sequence of MATH-modules and MATH and MATH are adequate, then MATH is adequate. CASE: The category MATH has colimits and MATH commutes with them. </CASES>  
LEMMA	  Let MATH be a quasi-compact and quasi-separated morphism of schemes. For any adequate MATH-module on MATH the pushforward MATH and the higher direct images MATH are adequate MATH-modules on MATH.  
LEMMA	  Let MATH be a scheme. Let MATH be an adequate MATH-module on MATH. The following are equivalent: <CASES> CASE: MATH, CASE: MATH is parasitic, CASE: MATH is parasitic for the MATH-topology, CASE: MATH for all MATH open, and CASE: there exists an affine open covering MATH such that MATH for all MATH. </CASES>  
LEMMA	  Let MATH be a scheme. The subcategory MATH of parasitic adequate modules is a Serre subcategory. Moreover, the functor MATH induces an equivalence of categories MATH  
LEMMA	  Let MATH be a quasi-compact and quasi-separated morphism of schemes. For any parasitic adequate MATH-module on MATH the pushforward MATH and the higher direct images MATH are parasitic adequate MATH-modules on MATH.  
LEMMA	  Let MATH be a scheme. Let MATH denote the full subcategory consisting of parasitic adequate modules. Then MATH and similarly for the bounded versions.  
LEMMA	  Let MATH be an affine scheme. The bounded below derived category MATH is the localization of MATH at the multiplicative subset of universal quasi-isomorphisms.  
LEMMA	  Let MATH be an affine scheme. The inclusion functor MATH has a right adjoint MATH. Moreover, the adjunction mapping MATH is an isomorphism for every adequate module MATH.  
LEMMA	  Let MATH be an affine scheme. For any object MATH of MATH we have MATH for all MATH where MATH is as in Lemma REF.  
LEMMA	  If MATH is an affine scheme, then the bounded below version MATH of the functor above is an equivalence.  
LEMMA	  Let MATH be an affine scheme. Let MATH and MATH be adequate MATH-modules. For any MATH the natural map MATH is an isomorphism.  
DEFNN	  Let MATH be a ring. <CASES> CASE: An MATH-module MATH is said to be pure projective if for every universally exact sequence MATH of MATH-module the sequence MATH is exact. CASE: An MATH-module MATH is said to be pure injective if for every universally exact sequence MATH of MATH-module the sequence MATH is exact. </CASES>  
LEMMA	  Let MATH be a ring. <CASES> CASE: A module is pure projective if and only if it is a direct summand of a direct sum of finitely presented MATH-modules. CASE: For any module MATH there exists a universally exact sequence MATH with MATH pure projective. </CASES>  
LEMMA	  Let MATH be a ring. For any MATH-module MATH set MATH. <CASES> CASE: For any MATH-module MATH the MATH-module MATH is pure injective. CASE: An MATH-module MATH is pure injective if and only if the map MATH splits. CASE: For any module MATH there exists a universally exact sequence MATH with MATH pure injective. </CASES>  
LEMMA	  Let MATH be a ring. <CASES> CASE: Let MATH be a universally exact sequence of MATH-modules. Let MATH. Then MATH is universally injective. CASE: Any universally exact complex can be split into universally exact short exact sequences. </CASES>  
DEFNN	  Let MATH be a ring. Let MATH be an MATH-module. <CASES> CASE: A pure projective resolution MATH is a universally exact sequence MATH with each MATH pure projective. CASE: A pure injective resolution MATH is a universally exact sequence MATH with each MATH pure injective. </CASES>  
LEMMA	  Let MATH be a ring. <CASES> CASE: Any MATH-module has a pure projective resolution. </CASES> Let MATH be a map of MATH-modules. Let MATH be a pure projective resolution and let MATH be a universally exact resolution. <CASES> CASE: There exists a map of complexes MATH inducing the given map MATH CASE: two maps MATH inducing the same map MATH are homotopic. </CASES>  
LEMMA	  Let MATH be a ring. <CASES> CASE: Any MATH-module has a pure injective resolution. </CASES> Let MATH be a map of MATH-modules. Let MATH be a universally exact resolution and let MATH be a pure injective resolution. <CASES> CASE: There exists a map of complexes MATH inducing the given map MATH CASE: two maps MATH inducing the same map MATH are homotopic. </CASES>  
DEFNN	  Let MATH be a ring and let MATH, MATH be MATH-modules. The MATHth pure extension module MATH is the MATHth cohomology module of the complex MATH where MATH is a pure injective resolution of MATH.  
LEMMA	  Let MATH be a ring. <CASES> CASE: MATH for MATH whenever MATH is pure injective, CASE: MATH for MATH whenever MATH is pure projective, in particular if MATH is an MATH-module of finite presentation, CASE: MATH is also the MATHth cohomology module of the complex MATH where MATH is a pure projective resolution of MATH. </CASES>  
LEMMA	  Let MATH be a ring. Let MATH be the category of adequate functors on MATH. The injective objects of MATH are exactly the functors MATH where MATH is a pure injective MATH-module.  
LEMMA	  Let MATH be an affine scheme. Let MATH, MATH be MATH-modules. For all MATH we have a canonical isomorphism MATH functorial in MATH and MATH.  
