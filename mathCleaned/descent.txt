DEFNN	  Let MATH be a scheme. Let MATH be a family of morphisms with target MATH. <CASES> CASE: A descent datum MATH for quasi-coherent sheaves with respect to the given family is given by a quasi-coherent sheaf MATH on MATH for each MATH, an isomorphism of quasi-coherent MATH-modules MATH for each pair MATH such that for every triple of indices MATH the diagram MATH of MATH-modules commutes. This is called the cocycle condition. CASE: A morphism MATH of descent data is given by a family MATH of morphisms of MATH-modules MATH such that all the diagrams MATH commute. </CASES>  
LEMMA	  Let MATH and MATH be families of morphisms of schemes with fixed target. Let MATH be a morphism of families of maps with fixed target, see Sites, Definition REF. Let MATH be a descent datum for quasi-coherent sheaves with respect to the family MATH. Then <CASES> CASE: The system MATH is a descent datum with respect to the family MATH. CASE: This construction is functorial in the descent datum MATH. CASE: Given a second morphism MATH of families of maps with fixed target with MATH there exists a functorial isomorphism of descent data MATH </CASES>  
DEFNN	  Let MATH be a scheme. Let MATH be a family of morphisms with target MATH. <CASES> CASE: Let MATH be a quasi-coherent MATH-module. We call the unique descent on MATH datum with respect to the covering MATH the trivial descent datum. CASE: The pullback of the trivial descent datum to MATH is called the canonical descent datum. Notation: MATH. CASE: A descent datum MATH for quasi-coherent sheaves with respect to the given covering is said to be effective if there exists a quasi-coherent sheaf MATH on MATH such that MATH is isomorphic to MATH. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be an open covering. Any descent datum on quasi-coherent sheaves for the family MATH is effective. Moreover, the functor from the category of quasi-coherent MATH-modules to the category of descent data with respect to MATH is fully faithful.  
DEFNN	  Let MATH be a ring map. <CASES> CASE: A descent datum MATH for modules with respect to MATH is given by an MATH-module MATH and an isomorphism of MATH-modules MATH such that the cocycle condition holds: the diagram of MATH-module maps MATH commutes (see below for notation). CASE: A morphism MATH of descent data is a morphism of MATH-modules MATH such that the diagram MATH is commutative. </CASES>  
LEMMA	  Let MATH be a ring map. Given a descent datum MATH we can associate to it a cosimplicial MATH-module MATH by the rules MATH and given MATH setting we define MATH This procedure is functorial in the descent datum.  
LEMMA	  Let MATH be a ring map. Let MATH be an MATH-module. The cosimplicial MATH-module associated to the canonical descent datum is isomorphic to the cosimplicial module MATH.  
DEFNN	  Let MATH be a ring map. We say a descent datum MATH is effective if there exists an MATH-module MATH and an isomorphism of descent data from MATH to MATH.  
LEMMA	  Suppose that MATH has a section. Then for any MATH-module MATH the extended cochain complex (REF) is exact.  
LEMMA	  Suppose that MATH is faithfully flat, see Algebra, Definition REF. Then for any MATH-module MATH the extended cochain complex (REF) is exact.  
LEMMA	  Let MATH be a faithfully flat ring map. Let MATH be a descent datum. Then MATH is effective if and only if the canonical map MATH is an isomorphism.  
LEMMA	  Let MATH be a faithfully flat ring map, and let MATH be faithfully flat. Set MATH. If all descent data for MATH are effective, then so are all descent data for MATH.  
PROPN	  [ Effective descent for modules along faithfully flat ring maps. ] Let MATH be a faithfully flat ring map. Then <CASES> CASE: any descent datum on modules with respect to MATH is effective, CASE: the functor MATH from MATH-modules to the category of descent data is an equivalence, and CASE: the inverse functor is given by MATH. </CASES>  
DEFNN	  A split equalizer is a diagram (REF) with MATH for which there exist auxiliary morphisms MATH and MATH such that MATH  
DEFNN	  A ring map MATH is universally injective if it is universally injective as a morphism in MATH.  
LEMMA	  Any faithfully flat ring map is universally injective.  
DEFNN	  Let MATH be a ring. Define the contravariant functor MATH MATH by setting MATH with the MATH-action on MATH given by MATH.  
LEMMA	  For a ring MATH, the functor MATH is exact and reflects injections and surjections.  
LEMMA	  Let MATH be a ring. A morphism MATH in MATH is universally injective if and only if MATH is a split surjection.  
DEFNN	  The functor MATH is called base extension along MATH. We say that MATH is a descent morphism for modules if MATH is fully faithful. We say that MATH is an effective descent morphism for modules if MATH is an equivalence of categories.  
LEMMA	  For MATH, the diagram MATH is a split equalizer.  
LEMMA	  For MATH, the diagram MATH obtained by applying MATH to (REF) is a split coequalizer.  
LEMMA	  The diagram MATH is a split equalizer.  
DEFNN	  Define the functor MATH MATH by taking MATH to be the MATH-submodule of MATH for which the diagram MATH is an equalizer.  
LEMMA	  If MATH is universally injective, then the diagram MATH obtained by tensoring (REF) over MATH with MATH is an  equalizer.  
THEOM	  The following conditions are equivalent. <CASES> CASE: The morphism MATH is a descent morphism for modules. CASE: The morphism MATH is an effective descent morphism for modules. CASE: The morphism MATH is universally injective. </CASES>  
LEMMA	  If MATH is flat, then MATH is an injective MATH-module.  
THEOM	  If MATH has one of the following properties as an MATH-module <CASES> CASE: finitely generated; CASE: finitely presented; CASE: flat; CASE: faithfully flat; CASE: finite projective; </CASES> then so does MATH as an MATH-module (and conversely).  
THEOM	  If MATH has one of the following properties as an MATH-algebra <CASES> CASE: of finite type; CASE: of finite presentation; CASE: formally unramified; CASE: unramified; CASE: etale; </CASES> then so does MATH as an MATH-algebra (and of course conversely).  
LEMMA	  Let MATH be an affine scheme. Let MATH be a standard fpqc covering of MATH, see Topologies, Definition REF. Any descent datum on quasi-coherent sheaves for MATH is effective. Moreover, the functor from the category of quasi-coherent MATH-modules to the category of descent data with respect to MATH is fully faithful.  
PROPN	  Let MATH be a scheme. Let MATH be an fpqc covering, see Topologies, Definition REF. Any descent datum on quasi-coherent sheaves for MATH is effective. Moreover, the functor from the category of quasi-coherent MATH-modules to the category of descent data with respect to MATH is fully faithful.  
LEMMA	  Let MATH be a (finite) Galois extension with Galois group MATH. Let MATH be a scheme over MATH. The category of quasi-coherent MATH-modules is equivalent to the category of systems MATH where <CASES> CASE: MATH is a quasi-coherent module on MATH, CASE: MATH is an isomorphism of modules, CASE: MATH for all MATH. </CASES> Here MATH.  
LEMMA	  Let MATH, MATH, and MATH be as above. The category of quasi-coherent MATH-modules is equivalent to the category of systems MATH where <CASES> CASE: MATH is a quasi-coherent MATH-module, CASE: MATH is an isomorphism of modules, CASE: MATH for all MATH. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is a finite type MATH-module. Then MATH is a finite type MATH-module.  
LEMMA	  Let MATH be a morphism of locally ringed spaces. Let MATH be a sheaf of MATH-modules. If <CASES> CASE: MATH is open as a map of topological spaces, CASE: MATH is surjective and flat, and CASE: MATH is of finite type, </CASES> then MATH is of finite type.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is an MATH-module of finite presentation. Then MATH is an MATH-module of finite presentation.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is locally generated by MATH sections as an MATH-module. Then MATH is locally generated by MATH sections as an MATH-module.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is a flat MATH-module. Then MATH is a flat MATH-module.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is a finite locally free MATH-module. Then MATH is a finite locally free MATH-module.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH be an fpqc covering such that each MATH is a locally projective MATH-module. Then MATH is a locally projective MATH-module.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH be a quasi-coherent MATH-module. Assume MATH is a finite morphism. Then MATH is an MATH-module of finite type if and only if MATH is an MATH-module of finite type.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH be a quasi-coherent MATH-module. Assume MATH is finite and of finite presentation. Then MATH is an MATH-module of finite presentation if and only if MATH is an MATH-module of finite presentation.  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH. The functor defined in (REF) satisfies the sheaf condition with respect to any MATH-covering MATH of any scheme MATH over MATH.  
DEFNN	  Let MATH. Let MATH be a scheme. Let MATH be a big site containing MATH. Let MATH be a quasi-coherent MATH-module. <CASES> CASE: The structure sheaf of the big site MATH is the sheaf of rings MATH which is denoted MATH or MATH. CASE: If MATH or MATH the structure sheaf of the small site MATH or MATH is the sheaf of rings MATH which is denoted MATH or MATH. CASE: The sheaf of MATH-modules associated to MATH on the big site MATH is the sheaf of MATH-modules MATH which is denoted MATH (and often simply MATH). CASE: If MATH or MATH the sheaf of MATH-modules associated to MATH on the small site MATH or MATH is the sheaf of MATH-modules MATH which is denoted MATH (and often simply MATH). </CASES>  
LEMMA	  Let MATH be a scheme. Denote MATH the morphisms of ringed sites of Remark REF. Let MATH be a sheaf of MATH-modules which we view a sheaf of MATH-modules on MATH. Then <CASES> CASE: MATH is the MATH-sheafification of the Zariski sheaf MATH on MATH, and CASE: MATH is the etale sheafification of the Zariski sheaf MATH on MATH. </CASES> Let MATH be a sheaf of MATH-modules on MATH. Then <CASES> CASE: MATH is the MATH-sheafification of the etale sheaf MATH where MATH is the morphism of ringed small etale sites of Remark REF. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent MATH-module. Let MATH. <CASES> CASE: The sheaf MATH is a quasi-coherent MATH-module on MATH, as defined in Modules on Sites, Definition REF. CASE: If MATH or MATH, then the sheaf MATH is a quasi-coherent MATH-module on MATH or MATH as defined in Modules on Sites, Definition REF. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH. Each of the functors MATH of Definition REF MATH is fully faithful.  
PROPN	  Let MATH be a scheme. Let MATH. <CASES> CASE: The functor MATH defines an equivalence of categories MATH between the category of quasi-coherent sheaves on MATH and the category of quasi-coherent MATH-modules on the big MATH site of MATH. CASE: Let MATH or MATH. The functor MATH defines an equivalence of categories MATH between the category of quasi-coherent sheaves on MATH and the category of quasi-coherent MATH-modules on the small MATH site of MATH. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH. Let MATH be one of the properties of modules defined in Modules on Sites, Definitions REF, REF, and REF. The equivalences of categories MATH defined by the rule MATH seen in Proposition REF have the property MATH except (possibly) when MATH is ``locally free'' or ``coherent''. If MATH``coherent'' the equivalence holds for MATH when MATH is locally Noetherian and MATH is Zariski or etale.  
LEMMA	  Let MATH be a scheme. Let <CASES> CASE: MATH and MATH, or CASE: let MATH and MATH, or CASE: let MATH and MATH. </CASES> Let MATH be an abelian sheaf on MATH. Let MATH be affine. Let MATH be a standard affine MATH-covering in MATH. Then <CASES> CASE: MATH is a MATH-covering of MATH, CASE: MATH is a refinement of MATH, and CASE: the induced map on Cech complexes (Cohomology on Sites, Equation (REF)) MATH is an isomorphism of complexes. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a quasi-coherent sheaf on MATH. Let MATH, MATH, MATH, MATH be as in Lemma REF. Then there is an isomorphism of complexes MATH (see Section REF) where MATH, MATH and MATH is a faithfully flat ring map. In particular MATH for all MATH.  
PROPN	  [ Cohomology of quasi-coherent sheaves is the same no matter which topology you use. ] Let MATH be a scheme. Let MATH be a quasi-coherent sheaf on MATH. Let MATH. <CASES> CASE: There is a canonical isomorphism MATH CASE: There are canonical isomorphisms MATH </CASES>  
PROPN	  Let MATH be a morphism of schemes. <CASES> CASE: The equivalences of categories of Proposition REF are compatible with pullback. More precisely, we have MATH for any quasi-coherent sheaf MATH on MATH. CASE: The equivalences of categories of Proposition REF part (1) are  notcompatible with pushforward in general. CASE: If MATH is quasi-compact and quasi-separated, and MATH then MATH and MATH preserve quasi-coherent sheaves and the diagram MATH is commutative, i.e., MATH. </CASES>  
LEMMA	  Let MATH be a quasi-compact and quasi-separated morphism of schemes. Let MATH be a quasi-coherent sheaf on MATH. For either the etale or Zariski topology, there are canonical isomorphisms MATH.  
LEMMA	  In Lemma REF the morphism of ringed sites MATH is flat.  
LEMMA	  Let MATH be a scheme. Let MATH. The functors MATH defined by the rule MATH seen in Proposition REF are <CASES> CASE: fully faithful, CASE: commmute with direct sums, CASE: commmute with colimits, CASE: right exact, CASE: exact as a functor MATH, CASE:  notexact as a functor MATH in general, CASE: given two quasi-coherent MATH-modules MATH, MATH we have MATH, CASE: if MATH or MATH, given two quasi-coherent MATH-modules MATH, MATH such that MATH is of finite presentation we have MATH in MATH, CASE: given two quasi-coherent MATH-modules MATH, MATH we do  nothave MATH in MATH in general even if MATH is of finite presentation, and CASE: given a short exact sequence MATH of MATH-modules then MATH is quasi-coherent, i.e., MATH is in the essential image of the functor. </CASES>  
LEMMA	  Let MATH be a scheme. The category MATH of quasi-coherent modules on MATH has the following properties: <CASES> CASE: Any direct sum of quasi-coherent sheaves is quasi-coherent. CASE: Any colimit of quasi-coherent sheaves is quasi-coherent. CASE: The kernel and cokernel of a morphism of quasi-coherent sheaves is quasi-coherent. CASE: Given a short exact sequence of MATH-modules MATH if two out of three are quasi-coherent so is the third. CASE: Given two quasi-coherent MATH-modules the tensor product is quasi-coherent. CASE: Given two quasi-coherent MATH-modules MATH, MATH such that MATH is of finite presentation. then the internal hom MATH is quasi-coherent. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH. The category MATH of quasi-coherent modules on MATH has the following properties: <CASES> CASE: Any direct sum of quasi-coherent sheaves is quasi-coherent. CASE: Any colimit of quasi-coherent sheaves is quasi-coherent. CASE: The cokernel of a morphism of quasi-coherent sheaves is quasi-coherent. CASE: Given a short exact sequence of MATH-modules MATH if MATH and MATH are quasi-coherent so is MATH. CASE: Given two quasi-coherent MATH-modules the tensor product is quasi-coherent. CASE: Given two quasi-coherent MATH-modules MATH, MATH such that MATH is finite locally free, the internal hom MATH is quasi-coherent. </CASES>  
LEMMA	  Let MATH be a scheme. <CASES> CASE: The category MATH has colimits and they agree with colimits in the categories MATH, MATH, and MATH. CASE: Given MATH in MATH the tensor products MATH computed in MATH, MATH, or MATH agree and the common value is an object of MATH. CASE: Given MATH in MATH with MATH finite locally free (in fppf, or equivalently etale, or equivalently Zariski topology) the internal homs MATH computed in MATH, MATH, or MATH agree and the common value is an object of MATH. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a presheaf of MATH-modules on MATH. The following are equivalent <CASES> CASE: for every morphism MATH of MATH the map MATH is an isomorphism, CASE: MATH is a sheaf on MATH and a quasi-coherent module on the ringed site MATH in the sense of Modules on Sites, Definition REF, CASE: same as in (2) for the etale topology, CASE: same as in (2) for the smooth topology, CASE: same as in (2) for the syntomic topology, CASE: same as in (2) for the fppf topology, CASE: MATH corresponds to a quasi-coherent module on MATH, MATH, MATH, MATH, or MATH via the equivalence (REF), CASE: MATH comes from a unique quasi-coherent MATH-module MATH by the procedure described in Section REF. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH. Let MATH be a presheaf of MATH-modules on MATH. The following are equivalent <CASES> CASE: for every morphism MATH of MATH the map MATH is an isomorphism, CASE: MATH is a sheaf on MATH and a quasi-coherent module on the ringed site MATH in the sense of Modules on Sites, Definition REF, CASE: MATH corresponds to a quasi-coherent module on MATH via the equivalence (REF), CASE: MATH comes from a unique quasi-coherent MATH-module MATH by the procedure described in Section REF. </CASES>  
DEFNN	  Let MATH be a scheme. Let MATH. Let MATH be a presheaf of MATH-modules on MATH. <CASES> CASE: MATH is called parasitic if for every flat morphism MATH we have MATH. CASE: MATH is called parasitic for the MATH-topology if for every MATH-covering MATH we have MATH for all MATH. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH. Let MATH be a presheaf of MATH-modules on MATH. <CASES> CASE: If MATH is parasitic for the MATH-topology, then MATH for every MATH open in MATH, resp.\ etale over MATH, resp.\ smooth over MATH, resp.\ syntomic over MATH, resp.\ flat and locally of finite presentation over MATH. CASE: If MATH is parasitic then MATH for every MATH flat over MATH. </CASES>  
LEMMA	  Let MATH be a morphism of schemes. For any parasitic MATH-module on MATH the pushforward MATH and the higher direct images MATH are parasitic MATH-modules on MATH.  
LEMMA	  Let MATH be a scheme. Let MATH. Let MATH be a sheaf of MATH-modules on MATH such that <CASES> CASE: MATH is quasi-coherent, and CASE: for every flat, locally finitely presented morphism MATH the canonical map MATH is an isomorphism. </CASES> Then MATH for every MATH flat and locally of finite presentation over MATH.  
LEMMA	  For a scheme MATH denote MATH the underlying set. Let MATH be a morphism of schemes. Then MATH is surjective.  
LEMMA	  Let MATH be a family of morphisms of affine schemes. The following are equivalent <CASES> CASE: for any quasi-coherent MATH-module MATH we have MATH CASE: MATH is a universal effective epimorphism (Sites, Definition REF) in the category of affine schemes. </CASES>  
LEMMA	  Let MATH be a family of morphisms of schemes. <CASES> CASE: If the family is universal effective epimorphism in the category of schemes, then MATH is surjective. CASE: If MATH and MATH are affine and the family is a universal effective epimorphism in the category of affine schemes, then MATH is surjective. </CASES>  
LEMMA	  Let MATH be a family of morphisms of schemes. If for every morphism MATH with MATH affine the family of base changes MATH forms an effective epimorphism, then the family of MATH forms a universal effective epimorphism in the category of schemes.  
LEMMA	  Let MATH be a family of morphisms of affine schemes. Assume the equivalent assumption of Lemma REF hold and that moreover for any morphism of affines MATH the map MATH is a submersive map of topological spaces (Topology, Definition REF). Then our family of morphisms is a universal effective epimorphism in the category of schemes.  
LEMMA	  Let MATH be a fpqc covering. Suppose that for each MATH we have an open subset MATH such that for all MATH we have MATH as open subsets of MATH. Then there exists a unique open subset MATH such that MATH for each MATH.  
LEMMA	  Let MATH be an fpqc covering, see Topologies, Definition REF. Then MATH is a universal effective epimorphism in the category of schemes, see Sites, Definition REF. In other words, every representable functor on the category of schemes satisfies the sheaf condition for the fpqc topology, see Topologies, Definition REF.  
LEMMA	  Consider schemes MATH and morphisms MATH and a morphism MATH with MATH. Set MATH. If there exists an fpqc covering MATH such that <CASES> CASE: for all MATH the morphism MATH is the coequalizer of MATH and MATH, and CASE: for all MATH and MATH the morphism MATH is the coequalizer of MATH and MATH </CASES> then MATH is the coequalizer of MATH and MATH.  
LEMMA	  Let MATH be ring maps. Assume MATH is of finite presentation and MATH faithfully flat and of finite presentation. Then MATH is of finite presentation.  
LEMMA	  Let MATH be ring maps. Assume MATH is of finite type and MATH faithfully flat and of finite presentation. Then MATH is of finite type.  
LEMMA	  REF Let MATH be a commutative diagram of morphisms of schemes. Assume that MATH is surjective, flat and locally of finite presentation and assume that MATH is locally of finite presentation (resp.\ locally of finite type). Then MATH is locally of finite presentation (resp.\ locally of finite type).  
LEMMA	  Let MATH be a commutative diagram of morphisms of schemes. Assume that <CASES> CASE: MATH is surjective, and syntomic (resp.\ smooth, resp.\ etale), CASE: MATH is syntomic (resp.\ smooth, resp.\ etale). </CASES> Then MATH is syntomic (resp.\ smooth, resp.\ etale).  
LEMMA	  Let MATH be a commutative diagram of morphisms of schemes. Assume that <CASES> CASE: MATH is surjective, flat, and locally of finite presentation, CASE: MATH is smooth (resp.\ etale). </CASES> Then MATH is smooth (resp.\ etale).  
LEMMA	  Let MATH be a commutative diagram of morphisms of schemes. Assume that <CASES> CASE: MATH is surjective, flat, and locally of finite presentation, CASE: MATH is syntomic. </CASES> Then both MATH and MATH are syntomic.  
LEMMA	  Let MATH be morphism of schemes. Let MATH be one of the following properties of morphisms of schemes: flat, locally finite type, locally finite presentation. Assume that MATH has MATH and that MATH can be refined by an fppf covering of MATH. Then MATH is MATH.  
DEFNN	  Let MATH be a property of schemes. Let MATH. We say MATH is local in the MATH-topology if for any MATH-covering MATH (see Topologies, Section REF) we have MATH  
LEMMA	  Let MATH be a property of schemes. Let MATH. Assume that <CASES> CASE: the property is local in the Zariski topology, CASE: for any morphism of affine schemes MATH which is flat, flat of finite presentation, etale, smooth or syntomic depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, property MATH holds for MATH if property MATH holds for MATH, and CASE: for any surjective morphism of affine schemes MATH which is flat, flat of finite presentation, etale, smooth or syntomic depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, property MATH holds for MATH if property MATH holds for MATH. </CASES> Then MATH is MATH local on the base.  
LEMMA	  The property MATH``MATH is locally Noetherian'' is local in the fppf topology.  
LEMMA	  The property MATH``MATH is Jacobson'' is local in the fppf topology.  
LEMMA	  The property MATH``every quasi-compact open of MATH has a finite number of irreducible components'' is local in the fppf topology.  
LEMMA	  The property MATH``MATH is locally Noetherian and MATH'' is local in the syntomic topology.  
LEMMA	  The property MATH``MATH is Cohen-Macaulay'' is local in the syntomic topology.  
LEMMA	  The property MATH``MATH is reduced'' is local in the smooth topology.  
LEMMA	  [ Normality is local in the smooth topology. ] The property MATH``MATH is normal'' is local in the smooth topology.  
LEMMA	  The property MATH``MATH is locally Noetherian and MATH'' is local in the smooth topology.  
LEMMA	  The property MATH``MATH is regular'' is local in the smooth topology.  
LEMMA	  The property MATH``MATH is Nagata'' is local in the smooth topology.  
LEMMA	  If MATH is a flat and surjective morphism of schemes and MATH is reduced, then MATH is reduced.  
LEMMA	  Let MATH be a morphism of algebraic spaces. If MATH is locally of finite presentation, flat, and surjective and MATH is regular, then MATH is regular.  
DEFNN	  Germs of schemes. <CASES> CASE: A pair MATH consisting of a scheme MATH and a point MATH is called the germ of MATH at MATH. CASE: A morphism of germs MATH is an equivalence class of morphisms of schemes MATH with MATH where MATH is an open neighbourhood of MATH. Two such MATH, MATH are said to be equivalent if and only if MATH and MATH agree in some open neighbourhood of MATH. CASE: We define the composition of morphisms of germs by composing representatives (this is well defined). </CASES>  
DEFNN	  Let MATH be a morphism of germs. We say MATH is etale (resp.\ smooth) if there exists a representative MATH of MATH which is an etale morphism (resp.\ a smooth morphism) of schemes.  
DEFNN	  Let MATH be a property of germs of schemes. We say that MATH is etale local (resp.\ smooth local) if for any etale (resp.\ smooth) morphism of germs MATH we have MATH.  
LEMMA	  Let MATH be an etale morphism of schemes. Let MATH and MATH. Then MATH.  
LEMMA	  Let MATH be an etale morphism of schemes. Let MATH and MATH. Then MATH.  
LEMMA	  Let MATH be an etale morphism of schemes. Let MATH and MATH. Then MATH is a regular local ring if and only if MATH is a regular local ring.  
DEFNN	  Let MATH be a property of morphisms of schemes over a base. Let MATH. We say MATH is MATH local on the base, or MATH local on the target, or local on the base for the MATH-topology if for any MATH-covering MATH (see Topologies, Section REF) and any morphism of schemes MATH over MATH we have MATH  
LEMMA	  Let MATH. Let MATH be a property of morphisms which is MATH local on the target. Let MATH have property MATH. For any morphism MATH which is flat, resp.\ flat and locally of finite presentation, resp.\ syntomic, resp.\ etale, resp.\ an open immersion, the base change MATH of MATH has property MATH.  
LEMMA	  Let MATH. Let MATH be a property of morphisms which is MATH local on the target. For any morphism of schemes MATH there exists a largest open MATH such that the restriction MATH has MATH. Moreover, <CASES> CASE: if MATH is flat and locally of finite presentation, syntomic, smooth, or etale and the base change MATH has MATH, then MATH, CASE: if MATH is flat and locally of finite presentation, syntomic, smooth, or etale, then MATH, and CASE: if MATH is a MATH-covering, then MATH, where MATH is the base change of MATH by MATH. </CASES>  
LEMMA	  Let MATH be a property of morphisms of schemes over a base. Let MATH. Assume that <CASES> CASE: the property is preserved under flat, flat and locally of finite presentation, etale, smooth, or syntomic base change depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic (compare with Schemes, Definition REF), CASE: the property is Zariski local on the base. CASE: for any surjective morphism of affine schemes MATH which is flat, flat of finite presentation, etale, smooth or syntomic depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, and any morphism of schemes MATH property MATH holds for MATH if property MATH holds for the base change MATH. </CASES> Then MATH is MATH local on the base.  
LEMMA	  The property MATH``MATH is quasi-compact'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is quasi-separated'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is universally closed'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is universally open'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is universally submersive'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is separated'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is surjective'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is universally injective'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is a universal homeomorphism'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is locally of finite type'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is locally of finite presentation'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is of finite type'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is of finite presentation'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is proper'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is flat'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is an open immersion'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is an isomorphism'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is affine'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is a closed immersion'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is quasi-affine'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is a quasi-compact immersion'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is integral'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is finite'' is fpqc local on the base.  
LEMMA	  The properties MATH``MATH is locally quasi-finite'' and MATH``MATH is quasi-finite'' are fpqc local on the base.  
LEMMA	  The property MATH``MATH is locally of finite type of relative dimension MATH'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is syntomic'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is smooth'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is unramified'' is fpqc local on the base. The property MATH``MATH is G-unramified'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is etale'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is finite locally free'' is fpqc local on the base. Let MATH. The property MATH``MATH is finite locally free of degree MATH'' is fpqc local on the base.  
LEMMA	  The property MATH``MATH is a monomorphism'' is fpqc local on the base.  
LEMMA	  The properties <CASES> CASE: MATH``MATH is a Koszul-regular immersion'', CASE: MATH``MATH is an MATH-regular immersion'', and CASE: MATH``MATH is a quasi-regular immersion'' </CASES> are fpqc local on the base.  
LEMMA	  The property MATH``MATH is an immersion'' is fppf local on the base.  
LEMMA	  Let MATH be a flat, quasi-compact, surjective monomorphism. Then f is an isomorphism.  
LEMMA	  A universally injective etale morphism is an open immersion.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH denote the set of generic points of irreducible components of MATH. If <CASES> CASE: MATH is flat and separated, CASE: for MATH we have MATH, and CASE: if MATH, MATH, then MATH, </CASES> then MATH is universally injective.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH denote the set of generic points of irreducible components of MATH. If <CASES> CASE: MATH is etale and separated, CASE: for MATH we have MATH, and CASE: if MATH, MATH, then MATH, </CASES> then MATH is an open immersion.  
LEMMA	  Let MATH be a morphism of schemes which is locally of finite type. Let MATH be a closed subset of MATH. If there exists an fpqc covering MATH such that the inverse image MATH is proper over MATH (Cohomology of Schemes, Definition REF) then MATH is proper over MATH.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH be an invertible MATH-module. Let MATH be an fpqc covering. Let MATH be the base change of MATH and let MATH be the pullback of MATH to MATH. The following are equivalent <CASES> CASE: MATH is ample on MATH, and CASE: MATH is ample on MATH for every MATH. </CASES>  
DEFNN	  Let MATH be a property of morphisms of schemes. Let MATH. We say MATH is MATH local on the source, or local on the source for the MATH-topology if for any morphism of schemes MATH over MATH, and any MATH-covering MATH we have MATH  
LEMMA	  Let MATH. Let MATH be a property of morphisms which is MATH local on the source. Let MATH have property MATH. For any morphism MATH which is flat, resp.\ flat and locally of finite presentation, resp.\ syntomic, resp.\ etale, resp.\ an open immersion, the composition MATH has property MATH.  
LEMMA	  Let MATH. Let MATH be a property of morphisms which is MATH local on the source. For any morphism of schemes MATH there exists a largest open MATH such that the restriction MATH has MATH. Moreover, if MATH is flat and locally of finite presentation, syntomic, smooth, or etale and MATH, then MATH.  
LEMMA	  Let MATH be a property of morphisms of schemes. Let MATH. Assume that <CASES> CASE: the property is preserved under precomposing with flat, flat locally of finite presentation, etale, smooth or syntomic morphisms depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, CASE: the property is Zariski local on the source, CASE: the property is Zariski local on the target, CASE: for any morphism of affine schemes MATH, and any surjective morphism of affine schemes MATH which is flat, flat of finite presentation, etale, smooth or syntomic depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, property MATH holds for MATH if property MATH holds for the composition MATH. </CASES> Then MATH is MATH local on the source.  
LEMMA	  The property MATH``MATH is flat'' is fpqc local on the source.  
LEMMA	  Then property MATH``for every MATH the map of local rings MATH is injective'' is fpqc local on the source.  
LEMMA	  The property MATH``MATH is locally of finite presentation'' is fppf local on the source.  
LEMMA	  The property MATH``MATH is locally of finite type'' is fppf local on the source.  
LEMMA	  The property MATH``MATH is open'' is fppf local on the source.  
LEMMA	  The property MATH``MATH is universally open'' is fppf local on the source.  
LEMMA	  The property MATH``MATH is syntomic'' is syntomic local on the source.  
LEMMA	  The property MATH``MATH is smooth'' is smooth local on the source.  
LEMMA	  The property MATH``MATH is etale'' is etale local on the source.  
LEMMA	  The property MATH``MATH is locally quasi-finite'' is etale local on the source.  
LEMMA	  The property MATH``MATH is unramified'' is etale local on the source. The property MATH``MATH is G-unramified'' is etale local on the source.  
DEFNN	  Let MATH be a property of morphisms of schemes. We say MATH is etale local on source-and-target if <CASES> CASE: (stable under precomposing with etale maps) if MATH is etale and MATH has MATH, then MATH has MATH, CASE: (stable under etale base change) if MATH has MATH and MATH is etale, then the base change MATH has MATH, and CASE: (locality) given a morphism MATH the following are equivalent <CASES> CASE: MATH has MATH, CASE: for every MATH there exists a commutative diagram MATH with etale vertical arrows and MATH with MATH such that MATH has MATH. </CASES> </CASES>  
LEMMA	  Let MATH be a property of morphisms of schemes which is etale local on source-and-target. Then <CASES> CASE: MATH is etale local on the source, CASE: MATH is etale local on the target, CASE: MATH is stable under postcomposing with etale morphisms: if MATH has MATH and MATH is etale, then MATH has MATH, and CASE: MATH has a permanence property: given MATH and MATH etale such that MATH has MATH, then MATH has MATH. </CASES>  
LEMMA	  Let MATH be a property of morphisms of schemes which is etale local on source-and-target. Let MATH be a morphism of schemes. The following are equivalent: <CASES> CASE: MATH has property MATH, CASE: for every MATH there exists an etale morphism of germs MATH, an etale morphism MATH, and a morphism MATH such that MATH and MATH has MATH, CASE: for any commutative diagram MATH with MATH, MATH etale the morphism MATH has MATH, CASE: for some diagram as in (c) with MATH surjective MATH has MATH, CASE: there exists an etale covering MATH such that each base change MATH has MATH, CASE: there exists an etale covering MATH such that each composition MATH has MATH, CASE: there exists an etale covering MATH and for each MATH an etale covering MATH such that each morphism MATH has MATH. </CASES>  
LEMMA	  Let MATH be a property of morphisms of schemes. Assume <CASES> CASE: MATH is etale local on the source, CASE: MATH is etale local on the target, and CASE: MATH is stable under postcomposing with open immersions: if MATH has MATH and MATH is an open subscheme then MATH has MATH. </CASES> Then MATH is etale local on the source-and-target.  
LEMMA	  Let MATH be a property of morphisms of schemes which is etale local on the source-and-target. Given a commutative diagram of schemes MATH such that MATH is etale at MATH and MATH is etale at MATH, then MATH where MATH is as in Lemma REF.  
LEMMA	  Let MATH be a field. Let MATH. For MATH with MATH and MATH denote MATH the automorphism of MATH given in coordinates by MATH Let MATH be a nonempty open subscheme such that MATH for all MATH as above. Then either MATH or the characteristic of MATH is MATH and MATH is a finite set of closed points whose coordinates are algebraic over MATH.  
LEMMA	  Let MATH be a property of morphisms of schemes. Assume <CASES> CASE: MATH is etale local on the source, CASE: MATH is smooth local on the target, CASE: MATH is stable under postcomposing with open immersions: if MATH has MATH and MATH is an open subscheme then MATH has MATH. </CASES> Given a commutative diagram of schemes MATH such that MATH is smooth MATH and MATH is etale at MATH, then MATH where MATH is as in Lemma REF.  
DEFNN	  Let MATH be a property of morphisms of germs of schemes. We say MATH is  etale local on the source-and-target if for any commutative diagram MATH of germs with etale vertical arrows we have MATH.  
LEMMA	  Let MATH be a property of morphisms of schemes which is etale local on the source-and-target. Consider the property MATH of morphisms of germs defined by the rule MATH Then MATH is etale local on the source-and-target as in Definition REF.  
LEMMA	  Let MATH be a property of morphisms of schemes which is etale local on source-and-target. Let MATH be the associated property of morphisms of germs, see Lemma REF. Let MATH be a morphism of schemes. The following are equivalent: <CASES> CASE: MATH has property MATH, and CASE: for every MATH the morphism of germs MATH has property MATH. </CASES>  
LEMMA	  The property of morphisms of germs MATH is etale local on the source-and-target.  
LEMMA	  Consider a commutative diagram of morphisms of schemes MATH with etale vertical arrows and a point MATH mapping to MATH. Then the morphism of fibres MATH is etale.  
LEMMA	  Let MATH. The property of morphisms of germs MATH is etale local on the source-and-target.  
LEMMA	  Let MATH. The property of morphisms of germs MATH is etale local on the source-and-target.  
LEMMA	  Let MATH. The property of morphisms of germs MATH is etale local on the source-and-target.  
DEFNN	  Let MATH be a morphism of schemes. <CASES> CASE: Let MATH be a scheme over MATH. A descent datum for MATH is an isomorphism MATH of schemes over MATH satisfying the cocycle condition that the diagram MATH commutes (with obvious notation). CASE: We also say that the pair MATH is a descent datum relative to MATH. CASE: A morphism MATH of descent data relative to MATH is a morphism MATH of schemes over MATH such that the diagram MATH commutes. </CASES>  
DEFNN	  Let MATH be a scheme. Let MATH be a family of morphisms with target MATH. <CASES> CASE: A descent datum MATH relative to the family MATH is given by a scheme MATH over MATH for each MATH, an isomorphism MATH of schemes over MATH for each pair MATH such that for every triple of indices MATH the diagram MATH of schemes over MATH commutes (with obvious notation). CASE: A morphism MATH of descent data is given by a family MATH of morphisms of MATH-schemes MATH such that all the diagrams MATH commute. </CASES>  
LEMMA	  Let MATH be a scheme. Let MATH be a family of morphisms with target MATH. Set MATH, and consider it as an MATH-scheme. There is a canonical equivalence of categories MATH which maps MATH to MATH with MATH and MATH.  
LEMMA	  Pullback of descent data for schemes over schemes. <CASES> CASE: Let MATH be a commutative diagram of morphisms of schemes. The construction MATH where MATH and where MATH is defined as the composition MATH defines a functor from the category of descent data relative to MATH to the category of descent data relative to MATH. CASE: Given two morphisms MATH, MATH making the diagram commute the functors MATH and MATH are canonically isomorphic. </CASES>  
DEFNN	  With MATH as in Lemma REF the functor MATH constructed in that lemma is called the pullback functor on descent data.  
LEMMA	[Pullback of descent data for schemes over families]  Let MATH and MATH be families of morphisms with fixed target. Let MATH, MATH and MATH be a morphism of families of maps with fixed target, see Sites, Definition REF. <CASES> CASE: Let MATH be a descent datum relative to the family MATH. The system MATH (with notation as in Remark REF) is a descent datum relative to MATH. CASE: This construction defines a functor between descent data relative to MATH and descent data relative to MATH. CASE: Given a second MATH, MATH and MATH morphism of families of maps with fixed target, then if MATH the two resulting functors between descent data are canonically isomorphic. CASE: These functors agree, via Lemma REF, with the pullback functors constructed in Lemma REF. </CASES>  
DEFNN	  With MATH, MATH, MATH, MATH, and MATH as in Lemma REF the functor MATH constructed in that lemma is called the pullback functor on descent data.  
DEFNN	  Let MATH be a scheme. Let MATH be a morphism of schemes. <CASES> CASE:  Given a scheme MATH over MATH we have the trivial descent datum of MATH relative to MATH, namely the identity morphism on MATH. CASE: By Lemma REF we get a canonical descent datum on MATH relative to MATH by pulling back the trivial descent datum via MATH. We often denote MATH this descent datum. CASE: A descent datum MATH relative to MATH is called effective if MATH is isomorphic to the canonical descent datum MATH for some scheme MATH over MATH. </CASES>  
DEFNN	  Let MATH be a scheme. Let MATH be a family of morphisms with target MATH. <CASES> CASE:  Given a scheme MATH over MATH we have a canonical descent datum on the family of schemes MATH by pulling back the trivial descent datum for MATH relative to MATH. We denote this descent datum MATH. CASE: A descent datum MATH relative to MATH is called effective if there exists a scheme MATH over MATH such that MATH is isomorphic to MATH. </CASES>  
LEMMA	  A surjective and flat morphism is an epimorphism in the category of schemes.  
LEMMA	  Let MATH be a surjective, flat morphism of schemes. The base change functor MATH is faithful.  
LEMMA	  In the situation of Lemma REF assume that MATH is surjective and flat. Then the pullback functor is faithful.  
LEMMA	  In the situation of Lemma REF assume <CASES> CASE: MATH is an fpqc covering (for example if MATH is surjective, flat, and quasi-compact), and CASE: MATH. </CASES> Then the pullback functor is fully faithful.  
LEMMA	  Let MATH be a morphism of schemes. Let MATH be a selfmap of MATH over MATH. In this case pullback by MATH is isomorphic to the identity functor on the category of descent data relative to MATH.  
LEMMA	  Let MATH be a morphism of schemes over a base scheme MATH. Assume there exists a morphism MATH over MATH, for example if MATH has a section. Then the pullback functor of Lemma REF defines an equivalence of categories between the category of descent data relative to MATH and MATH.  
LEMMA	  Let MATH be a morphism of schemes over a base scheme MATH. Assume MATH is surjective and flat. Then the pullback functor of Lemma REF is a faithful functor from the category of descent data relative to MATH to the category of descent data relative to MATH.  
LEMMA	  Let MATH be a morphism of schemes over a base scheme MATH. Assume MATH is an fpqc covering (for example if MATH is surjective, flat and quasi-compact). Then the pullback functor of Lemma REF is a fully faithful functor from the category of descent data relative to MATH to the category of descent data relative to MATH.  
LEMMA	  Let MATH be a scheme. Let MATH, and MATH, be families of morphisms with target MATH. Let MATH, MATH and MATH be a morphism of families of maps with fixed target, see Sites, Definition REF. Assume that for each MATH the family MATH is an fpqc covering of MATH. Then the pullback functor MATH of Lemma REF is fully faithful.  
LEMMA	  Let MATH be a scheme. Let MATH, and MATH, be families of morphisms with target MATH. Let MATH, MATH and MATH be a morphism of families of maps with fixed target, see Sites, Definition REF. Assume that for each MATH the family MATH is a Zariski covering (see Topologies, Definition REF) of MATH. Then the pullback functor MATH of Lemma REF is an equivalence of categories. In particular, the category of schemes over MATH is equivalent to the category of descent data relative to any Zariski covering of MATH.  
LEMMA	  Let MATH be a scheme. Let MATH, and MATH, be fpqc-coverings of MATH. If MATH is a refinement of MATH, then the pullback functor MATH is fully faithful. In particular, the category of schemes over MATH is identified with a full subcategory of the category of descent data relative to any fpqc-covering of MATH.  
LEMMA	  Let MATH be a surjective, quasi-compact, flat morphism of schemes. Let MATH be a descent datum relative to MATH. Suppose that for all MATH there exists an open subscheme MATH such that MATH and such that the descent datum MATH is effective. Then MATH is effective.  
DEFNN	  Let MATH be a property of morphisms of schemes over a base. Let MATH. We say morphisms of type MATH satisfy descent for MATH-coverings if for any MATH-covering MATH (see Topologies, Section REF), any descent datum MATH relative to MATH such that each morphism MATH has property MATH is effective.  
LEMMA	  Let MATH be a property of morphisms of schemes over a base. Let MATH. Suppose that <CASES> CASE: MATH is stable under any base change (see Schemes, Definition REF), CASE: if MATH, MATH have MATH, then so does MATH, and CASE: for any surjective morphism of affines MATH which is flat, flat of finite presentation, etale, smooth or syntomic depending on whether MATH is fpqc, fppf, etale, smooth, or syntomic, any descent datum MATH relative to MATH over MATH such that MATH holds for MATH is effective. </CASES> Then morphisms of type MATH satisfy descent for MATH-coverings.  
LEMMA	  Let MATH be a scheme. Let MATH be an fpqc covering, see Topologies, Definition REF. Let MATH be a descent datum relative to MATH. If each morphism MATH is affine, then the descent datum is effective.  
LEMMA	  Let MATH be a scheme. Let MATH be an fpqc covering, see Topologies, Definition REF. Let MATH be a descent datum relative to MATH. If each morphism MATH is a closed immersion, then the descent datum is effective.  
LEMMA	  Let MATH be a scheme. Let MATH be an fpqc covering, see Topologies, Definition REF. Let MATH be a descent datum relative to MATH. If each morphism MATH is quasi-affine, then the descent datum is effective.  
LEMMA	  Let MATH. Let MATH be a big MATH-site. Let MATH. Let MATH be a covering in the site MATH. There is an equivalence of categories MATH Moreover, <CASES> CASE: the objects representing MATH on the right hand side correspond to the schemes MATH on the left hand side, and CASE: the sheaf MATH is representable if and only if the corresponding descent datum MATH is effective. </CASES>  
