LEMMA	  Let MATH be an algebraic stack. Notation as in Cohomology of Stacks, Lemmas REF and REF. <CASES> CASE: The functor MATH has a left derived functor MATH which is left adjoint to MATH and such that MATH. CASE: The functor MATH has a left derived functor MATH which is left adjoint to MATH and such that MATH. CASE: The functor MATH has a left derived functor MATH which is left adjoint to MATH and such that MATH. CASE: The functor MATH has a left derived functor MATH which is left adjoint to MATH and such that MATH. </CASES> Warning: It is not clear (a priori) that MATH on modules agrees with MATH on abelian sheaves, see Cohomology on Sites, Remark REF.  
LEMMA	  With assumptions and notation as in Cohomology of Stacks, Lemma REF. We have MATH on unbounded derived categories (both for the case of modules and for the case of abelian sheaves).  
LEMMA	  Let MATH be an algebraic stack. Notation as in Cohomology of Stacks, Lemma REF. <CASES> CASE: Let MATH be a quasi-coherent MATH-module  on the lisse-etale site of MATH. For all MATH the sheaf MATH is a locally quasi-coherent module with the flat base change property on MATH. CASE: Let MATH be a quasi-coherent MATH-module  on the flat-fppf site of MATH. For all MATH the sheaf MATH is a locally quasi-coherent module with the flat base change property on MATH. </CASES>  
LEMMA	  Let MATH be an algebraic stack. We have MATH for either MATH as in Lemma REF part (1) or MATH as in Lemma REF part (3).  
LEMMA	  Let MATH be an algebraic stack. Notation as in Lemma REF. <CASES> CASE: For MATH in MATH we have <CASES> CASE: MATH, and CASE: MATH for any object MATH of MATH. </CASES> CASE: For MATH in MATH we have <CASES> CASE: MATH, and CASE: MATH for any object MATH of MATH. </CASES> </CASES> In both cases, the same holds for modules, since we have MATH and there is no difference in computing cohomology by Cohomology on Sites, Lemma REF.  
DEFNN	  Let MATH be an algebraic stack. With notation as above we define the derived category of MATH-modules with quasi-coherent cohomology sheaves as the Verdier quotient MATH  
LEMMA	  Let MATH be an algebraic stack. Abbreviate MATH. The comparison morphism MATH induces a commutative diagram MATH Moreover, the left two vertical arrows are equivalences of triangulated categories, hence we also obtain an equivalence MATH  
LEMMA	  Let MATH be an algebraic stack. Set MATH. <CASES> CASE: Let MATH be an object of MATH. With MATH as in Cohomology of Stacks, Lemma REF for the lisse-etale site we have <CASES> CASE: MATH is in MATH, CASE: MATH if and only if MATH is in MATH, CASE: MATH is in MATH for MATH in MATH, and CASE: the functors MATH and MATH define mutually inverse functors MATH </CASES> CASE: Let MATH be an object of MATH. With MATH as in Cohomology of Stacks, Lemma REF for the flat-fppf site we have <CASES> CASE: MATH is in MATH, CASE: MATH if and only if MATH is in MATH, CASE: MATH is in MATH for MATH in MATH, and CASE: the functors MATH and MATH define mutually inverse functors MATH </CASES> </CASES>  
LEMMA	  Let MATH be an algebraic stack. Let MATH be an object of MATH. There exists a canonical distinguished triangle MATH in MATH such that MATH is in MATH and MATH for all MATH in MATH.  
PROPN	  Let MATH be a quasi-compact and quasi-separated morphism of algebraic stacks. The functor MATH induces a commutative diagram MATH and hence induces a functor MATH on quotient categories. Moreover, the functor MATH of Cohomology of Stacks, Proposition REF are equal to MATH with MATH as in (REF).  
PROPN	  Let MATH be a morphism of algebraic stacks. The exact functor MATH induces a commutative diagram MATH The composition MATH is left derivable with respect to the localization MATH and we may define MATH as its left derived functor MATH (see Derived Categories, Definitions REF and REF). If MATH is quasi-compact and quasi-separated, then MATH and MATH satisfy the following adjointness: MATH for MATH and MATH.  
LEMMA	  Let MATH be an algebraic stack. Let MATH be an object of MATH whose cohomology sheaves are parasitic. Then MATH for all objects MATH of MATH lying over a scheme MATH such that MATH is flat.  
LEMMA	  Let MATH be an algebraic stack. Let MATH be an object of MATH such that MATH for all objects MATH of MATH lying over an affine scheme MATH such that MATH is flat. Then MATH for all MATH.  
LEMMA	  Let MATH be an algebraic stack. Let MATH be an object of MATH. Then MATH satisfies the following property: for any morphism MATH of MATH the map MATH is a quasi-isomorphism.  
PROPN	  Let MATH be an algebraic stack. Then MATH is canonically equivalent to MATH.  
